version: 2.1
description: |
  This orb elevates Circle to the next dimension. It pre-bakes environment
  variables that assist in OS detection and GitHub tasks.

  This can be useful in order to know which binaries to run, where certain
  files may be located in the filesystem, whether or not using `sudo` is
  needed, or to find the base branch in a GitHub PR.

  This orb is especially helpful as a utility in creating your own
  cross-platform orbs.

  Bash is a requirement. This orb supports the Docker, machine, and macOS
  executors. This includes Linux, amd64 and arm64 as well as macOS amd65. See
  repository for full documentation.

display:
  source_url: "https://github.com/hubci/sphere-orb"

commands:
  init:
    description: "Run OS detection and initialize environment variables."
    steps:
      - run:
          name: Init OS Detection
          command: |
            # Start with family detection.
            family=$(uname -s | tr '[:upper:]' '[:lower:]')
            case $family in
              linux)
                osID=$(grep -e "^ID=" /etc/os-release | cut -c4-)
                ;;
              darwin)
                osID=macos
                ;;
              *)
                echo "Unsupported operating system."
                exit 1
                ;;
            esac
            # Version number
            case $osID in
              ubuntu)
                osVersion=$(grep -e "^DISTRIB_RELEASE=" /etc/lsb-release | cut -c17-)
                ;;
              debian)
                osVersion=$(cat /etc/debian_version)
                ;;
              alpine)
                osVersion=$(cat /etc/alpine-release)
                ;;
              macos)
                osVersion=$(sw_vers -productVersion)
                ;;
              *)
                echo "Unsupported operating system ID."
                exit 1
                ;;
            esac
            # Determine if sudo is available and/or neccessary
            SUDO=""
            if [[ $EUID -ne 0 ]]; then
              SUDO=sudo
            fi
            command -v sudo >/dev/null 2>&1 || { SUDO=""; }
            # Export new variables.
            # This section can be replaced by the possible Bash/envar orb in
            # the future.
            echo "export OSD_FAMILY=$(echo $family)" >> $BASH_ENV
            echo "export OSD_ID=$(echo $osID)" >> $BASH_ENV
            echo "export OSD_VERSION=$(echo $osVersion)" >> $BASH_ENV
            echo "export SUDO=$(echo $SUDO)" >> $BASH_ENV
examples:
  detect-os:
    description: Here's how you would use the OS Detect Orb.
    usage:
      version: "2.1"
      orbs:
        detect: circleci/os-detect@0.3.0
      jobs:
        build:
          docker:
            - image: cibuilds/base
          steps:
            - detect/init
            - run: echo "The current operating system is ${OSD_ID}."
            - run:
                command: |
                  case $OSD_FAMILY in
                    linux)
                      osVersion=$(grep -e "^DISTRIB_RELEASE=" /etc/lsb-release | cut -c17-)
                      if [ $OSD_ID == "alpine" ]; then
                        # Here is where you would install an Alpine specific binary.
                        # This might be the case because Alpine doesn't have the
                        # same libs as most Linux distros.
                      else
                        # Here is where you would install generic Linux binaries.
                      fi
                      ;;
                    darwin)
                      osVersion=$(sw_vers -productVersion)
                      # Here is where you would install a macOS binary.
                      ;;
                    *)
                      echo "Unsupported Operating System."
                      exit 1
                      ;;
                  esac
                name: Install the binary for X
      workflows: null
